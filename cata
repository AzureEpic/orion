local args = {
	[1] = 21420014
}

game:GetService("ReplicatedStorage").Remotes.ToggleAsset:InvokeServer(unpack(args))
task.wait()
local args = {
	[1] = 90718618
}

game:GetService("ReplicatedStorage").Remotes.ToggleAsset:InvokeServer(unpack(args))
task.wait()
local args = {
	[1] = 92142829
}

game:GetService("ReplicatedStorage").Remotes.ToggleAsset:InvokeServer(unpack(args))

task.wait()
local args = {
	[1] = 68539623
}

game:GetService("ReplicatedStorage").Remotes.ToggleAsset:InvokeServer(unpack(args))

local args = {
	[1] = 212641536
}

game:GetService("ReplicatedStorage").Remotes.ToggleAsset:InvokeServer(unpack(args))
-- Gui to Lua
-- Version: 3.2

-- Instances:

local catalog = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local Zombies = Instance.new("TextButton")
local Zombies2 = Instance.new("TextButton")
local TextButton = Instance.new("TextButton")
local alpaca = Instance.new("TextButton")

--Properties:

catalog.Name = "catalog"
catalog.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
catalog.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = catalog
Frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.26364246, 0, 0.548401892, 0)
Frame.Size = UDim2.new(0.471332699, 0, 0.145916998, 0)

Zombies.Name = "Zombies"
Zombies.Parent = Frame
Zombies.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Zombies.BorderColor3 = Color3.fromRGB(0, 0, 0)
Zombies.BorderSizePixel = 0
Zombies.Position = UDim2.new(-2.428687e-05, 0, 0.541284144, 0)
Zombies.Size = UDim2.new(0.28169468, 0, 0.458715588, 0)
Zombies.Font = Enum.Font.SourceSans
Zombies.Text = "Godmode"
Zombies.TextColor3 = Color3.fromRGB(0, 0, 0)
Zombies.TextScaled = true
Zombies.TextSize = 14.000
Zombies.TextWrapped = true

Zombies2.Name = "Zombies 2"
Zombies2.Parent = Frame
Zombies2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Zombies2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Zombies2.BorderSizePixel = 0
Zombies2.Position = UDim2.new(0.391312838, 0, 0.541284144, 0)
Zombies2.Size = UDim2.new(0.28169468, 0, 0.458715588, 0)
Zombies2.Font = Enum.Font.SourceSans
Zombies2.Text = "zombie 2"
Zombies2.TextColor3 = Color3.fromRGB(0, 0, 0)
Zombies2.TextScaled = true
Zombies2.TextSize = 14.000
Zombies2.TextWrapped = true

TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(-2.428687e-05, 0, -0.00843871292, 0)
TextButton.Size = UDim2.new(0.28169468, 0, 0.458715588, 0)
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "do"
TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton.TextScaled = true
TextButton.TextSize = 14.000
TextButton.TextWrapped = true

alpaca.Name = "alpaca"
alpaca.Parent = Frame
alpaca.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
alpaca.BorderColor3 = Color3.fromRGB(0, 0, 0)
alpaca.BorderSizePixel = 0
alpaca.Position = UDim2.new(0.391312838, 0, -0.00843871292, 0)
alpaca.Size = UDim2.new(0.28169468, 0, 0.458715588, 0)
alpaca.Font = Enum.Font.SourceSans
alpaca.Text = "alpaca"
alpaca.TextColor3 = Color3.fromRGB(0, 0, 0)
alpaca.TextScaled = true
alpaca.TextSize = 14.000
alpaca.TextWrapped = true

-- Scripts:

local function MNLH_fake_script() -- Frame.main 
	local script = Instance.new('LocalScript', Frame)

	-- Variables to control the toggles
	local on = false
	local alpacaOn = false
	local zombie = false
	local zombie2 = false
	
	
	-- Main loop for functionality
	task.spawn(function()
		while true do
			if on then
				-- Fire remote to toggle GrimgoldPeriastron
				game:GetService("ReplicatedStorage").Remotes.ToggleAsset:InvokeServer(73829193)
	
				-- Equip and use the tool
				local character = game.Players.LocalPlayer.Character
				local grimgoldTool = character and game.Players.LocalPlayer.Backpack:FindFirstChild("GrimgoldPeriastron")
				if grimgoldTool then
					game.Players.LocalPlayer.Character.Humanoid:EquipTool(grimgoldTool)
					grimgoldTool.Remote:FireServer(Enum.KeyCode.Q)
				end
			end
	
			if alpacaOn then
				-- Fire remote to toggle AnAlpacaYouKnow
				game:GetService("ReplicatedStorage").Remotes.ToggleAsset:InvokeServer(292969139)
	
				-- Equip and use the tool
				local character = game.Players.LocalPlayer.Character
				local alpacaTool = character and game.Players.LocalPlayer.Backpack:FindFirstChild("AnAlpacaYouKnow")
				if alpacaTool then
					game.Players.LocalPlayer.Character.Humanoid:EquipTool(alpacaTool)
					alpacaTool:Activate()
				end
			end
	
	
			if zombie then
				-- Fire remote to toggle AnAlpacaYouKnow
				game:GetService("ReplicatedStorage").Remotes.ToggleAsset:InvokeServer(26421972)
	
				-- Equip and use the tool
				local character = game.Players.LocalPlayer.Character
				local alpacaTool = character and game.Players.LocalPlayer.Backpack:FindFirstChild("ZombieStaff")
				if alpacaTool then
					game.Players.LocalPlayer.Character.Humanoid:EquipTool(alpacaTool)
					alpacaTool:Activate()
				end
			end
	
	
			if zombie2 then
				
				game:GetService("ReplicatedStorage").Remotes.ToggleAsset:InvokeServer(93536844)
	task.wait()
				-- Equip and use the tool
				local player = game.Players.LocalPlayer
				local character = player.Character or player.CharacterAdded:Wait()
				local zombieLauncher = character and player.Backpack:FindFirstChild("ZombieLauncher")
	
				if zombieLauncher then
					-- Equip the tool
					character.Humanoid:EquipTool(zombieLauncher)
	
					-- Use MouseButton1Down and MouseButton1Up events
					local mouseButton1DownEvent = zombieLauncher:FindFirstChild("MouseButton1Down")
					if mouseButton1DownEvent then
						mouseButton1DownEvent:FireServer(character.PrimaryPart.Position)
					end
	
					local mouseButton1UpEvent = zombieLauncher:FindFirstChild("MouseButton1Up")
					if mouseButton1UpEvent then
						mouseButton1UpEvent:FireServer(character.PrimaryPart.CFrame)
					end
				end
				task.wait()
			end
	
	
	
	
	
	
			task.wait(0.001) -- Adjusted delay for better performance
		end
	end)
	
	-- Connect button functionality
	script.Parent.TextButton.MouseButton1Click:Connect(function()
		on = not on
		print("GrimgoldPeriastron toggled:", on)
	end)
	
	script.Parent.alpaca.MouseButton1Click:Connect(function()
		alpacaOn = not alpacaOn
		print("AnAlpacaYouKnow toggled:", alpacaOn)
	end)
	
script.Parent.Zombies.MouseButton1Click:Connect(function()
    -- Toggle asset 

 local args = {
    [1] = 93725362
}

game:GetService("ReplicatedStorage").Remotes.ToggleAsset:InvokeServer(unpack(args))

    task.wait()

    -- Equip the tool
    local player = game:GetService("Players").LocalPlayer
    local backpack = player.Backpack
    local character = player.Character or player.CharacterAdded:Wait()
    local sword = backpack:FindFirstChild("Sword of the Behemoth")

    if sword then
        character:FindFirstChild("Humanoid"):EquipTool(sword)
        task.wait()

        -- Ensure the sword exists in the character and has "Click"
        sword = character:FindFirstChild("Sword of the Behemoth")
        if sword and sword:FindFirstChild("Click") then
            -- Fire the "Click" event with true
            local args = {
    [1] = true,
    [2] = character.HumanoidRootPart.Position
}

game:GetService("Players").LocalPlayer.Character:FindFirstChild("Sword of the Behemoth").Click:FireServer(unpack(args))

            wait(15)

            -- Fire the "Click" event with false
           local args = {
    [1] = false,
    [2] = character.HumanoidRootPart.Position
}

game:GetService("Players").LocalPlayer.Character:FindFirstChild("Sword of the Behemoth").Click:FireServer(unpack(args))
        else
            warn("Sword of the Behemoth or its 'Click' event is missing!")
        end
    else
        warn("Sword of the Behemoth not found in Backpack!")
    end

    wait(3.5)

    -- Toggle asset off
   local args = {
    [1] = 93725362
}

game:GetService("ReplicatedStorage").Remotes.ToggleAsset:InvokeServer(unpack(args))

end)

	
	script.Parent["Zombies 2"].MouseButton1Click:Connect(function()
		zombie2 = not zombie2
		print("z2 toggled:", zombie2)
	end)
	
	
	
	game.Players.PlayerAdded:Connect(function(p)
	
		if p.Name == "Gravity_VoyagerAlt" then
			task.wait()
			local args = {
				[1] = "ALERT! Tjcoocoo".. " HAS JOINED, TAKE COVER!",
				[2] = "All"
			}
	
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
	
	
	
	
	
		end
	end)
	
	
	game.Players.LocalPlayer.PlayerGui.ChildAdded:Connect(function(c)
	
		if c.Name == "DarknessGui" or c.Name == "VolleyballScreenGui" then
			c.Enabled = false
		end
	end)
	
	
	
	
	local Players = game:GetService("Players")
	local LocalPlayer = Players.LocalPlayer
	
	-- Listen for chat messages
	LocalPlayer.Chatted:Connect(function(message)
		-- Check if the message starts with "!music"
		if message:sub(1, 6) == "!music" then
			-- Extract the ID after the command
			local id = message:match("!music%s+(%d+)")
			if id then
				-- Fire the remote with the extracted ID
				local remote = LocalPlayer.Backpack.SuperFlyGoldBoombox.Remote
				remote:FireServer(tonumber(id))
				print(tonumber(id))
			end
		end
	end)
	task.wait()
	local args = {
		[1] = "PlaySong",
		[2] = 45819151
	}
	
	game:GetService("Players").LocalPlayer.Backpack.SuperFlyGoldBoombox.Remote:FireServer(unpack(args))
	print("playing")
	

game.Players.LocalPlayer.PlayerGui.ChildAdded:Connect(function(child)     if child.Name == "DarknessGui" then         for _, ch in pairs(child:GetChildren()) do             if ch:IsA("Frame") then                 ch.Visible = false             end         end     end end) 

	while wait() do
		for _, m in workspace:GetDescendants() do
	
			if m:IsA("Model") and m.Name == "ForceField" then
				m:Destroy()
			end
		end
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 78
	end
end
coroutine.wrap(MNLH_fake_script)()
local function VONMH_fake_script() -- Frame.LocalScript 
	local script = Instance.new('LocalScript', Frame)

	local UserInputService = game:GetService("UserInputService")
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
	
	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end
coroutine.wrap(VONMH_fake_script)()
